# создаём один словарь со всеми тестами и ответами
tests = {
   # ключ первой пары ключ-значение
   "Задание 1 - Синтаксический анализ предложений":
   # значение первой пары ключ-значение — ещё один словарь
       {
           # текст вопроса. первая пара словаря, ключ — 'текст', значение -- текст в несколько строк
           "текст": (
               "\n(1)Я обернулся, заканчивая осмотр островка, и ахнул от изумления:"
               "\nметрах в сорока от меня вставал из песка замок, совсем крошечный, "
               "\nочень аккуратный, жмущийся к берегу и нависающий над самой водой. "
               "\n(2)Но у него было всё полагающееся настоящему замку: высокие стены"
               "\nиз розового мрамора, сторожевая башня метров десяти-пятнадцати в высоту, "
               "\nузкие окна-бойницы, ворота из серого металла. (3)Однако это было ещё не самое удивительное."
               "\n(4)С трёх сторон замка, обращённых к морю, ровными дугами выгибались тонкие розовые мосты."
               "\n(5)Они шли над морем, поднимаясь на головокружительную высоту,"
               "\nи опускались на островках вдали,кажется, возле таких же замков."
           ),
           # текст задания. вторая пара словаря, ключ — 'вопрос', значение — текст вопроса
           "вопрос": "Прочитайте текст. Укажите варианты ответов, в которых дано верное утверждение.",
           # варианты ответов. третья пара словаря, ключ — 'варианты', значение — варианты ответов
           "варианты": [
               "1-е предложение – бессоюзное сложное предложение, двоеточие ставится, "
               "\nпотому что вторая часть указывает на причину того, о чём говорится в первой части",
               "2-е предложение – простое предложение с обобщающим словом"
               "\nпри однородных членах, поэтому ставится двоеточие",
               "3-е предложение – односоставное безличное",
               "4-е предложение – простое, ничем не осложнено",
               "5-е предложение – простое, осложнено обособленным определением"
           ],
           # правильные ответы. четвёртая пара словаря, ключ — 'правильные ответы',
           # значение — список с правильными номерами ответов
           "правильные_ответы": [1, 2]
       },

   # следующий вопрос
   "Задание 2": {
       "текст": (
           "\nНайдите слова, где пропущена одна и та же буква"
       ),
       "вопрос": "Выберите верные номера",
       "варианты": [
           "волну..мый, выгоня..шь",
           "невид..мый (берег), подброс..шь",
           "разбуд..шь, сменя..мый",
           "бормоч..шь, нагруж..нный",
           "дыш..шь, увид..нный"
       ],
       "правильные_ответы": [1, 2, 4]
       }
}


# создаём функцию для вывода вопросов в консоли
def display_question(test):
   # выводим текст каждого отдельного задания — для этого
   # находим внутри словаря test значение ключа 'текст'
   print(f"Текст: {test['текст']}\n")
   # выводим вопрос каждого отдельного задания — для этого
   # находим внутри словаря test значение ключа 'вопрос'
   print(f"Вопрос: {test['вопрос']}\n")
   # выводим пронумерованные варианты ответов каждого отдельного задания —
   # для этого находим внутри словаря test значение ключа 'варианты', по которому лежит список,
   # проходим по этому списку, нумеруем каждый элемент от 1 и выводим все элементы вместе с номером
   for i, option in enumerate(test['варианты'], 1):
       print(f"{i}. {option}")


# создаём функцию для проверки ответов
def check_answers(user_answers, correct_answers):
   # разбиваем строку ответа пользователя в тех местах, где есть запятая, и создаём из этих элементов список
   # каждый элемент списка делаем целым числом, делаем из списка множество
   user_answers_set = set(map(int, user_answers.split(',')))
   # загружаем в переменную с правильными ответами множество, созданное из списка правильных ответов в словаре
   correct_answers_set = set(correct_answers)
   # проверяем, равны ли множество ответов пользователя и множество ответов из словаря
   return user_answers_set == correct_answers_set


# создаём основную функцию
def main():
   # создаём счёчик правильных ответов
   right_answers = 0
   # создаём счёчик всех ответов
   all_questions = 0

   # проходим циклом по ключам и значениям в основном словаре
   for name, test in tests.items():
       # выводим номер или название задания
       print(f"\n{name}")
       # выводим текст задания и варианты ответов
       display_question(test)
       # просим пользователя ввести ответы
       user_answers = input("\nВведите номера верных ответов через запятую: ")
       # проверяем ответы отдельной функцией, пишем о результате
       if check_answers(user_answers, test['правильные_ответы']):
           print("Верно!")
           # если пользователь ответил верно, увеличиваем счётчик верных ответов
           right_answers += 1
       else:
           print("Неверно!")
       # увеличиваем счётчик всех ответов в любом случае
       all_questions += 1

   # отчитываемся о результатах пройденного теста и предлагаем пройти ещё раз
   print(f'Вы ответили правильно на {right_answers} вопросов из {all_questions}.'
         f'\nХотите попробовать ещё раз? (Да/Нет)')

   # ждём, что овтетит пользователь
   one_more_test = input('')
   # запускаем тест повторно, если пользователь отвечает 'Да'
   if one_more_test == 'Да':
       main()


main()